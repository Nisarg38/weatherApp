{"version":3,"sources":["icons/temp.svg","icons/humidity.svg","icons/wind.svg","icons/pressure.svg","Components/WeatherComponent.js","icons/perfect-day.svg","Components/CityComponents.js","App.js","index.js"],"names":["WeatherInfoIcons","Sunset","Sunrise","Humidity","Humidty","Wind","Pressure","WeatherCondition","styled","div","Condition","span","WeatherLogo","img","Location","WeatherinfoLable","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","props","name","value","src","WeatherComponent","timeStamp","weather","isDay","icon","includes","sys","country","Math","floor","main","temp","description","Date","getHours","getMinutes","humidity","wind","speed","pressure","ChooseCityLabel","SearchBox","form","CityComponent","updatecity","fetchWeather","onSubmit","placeholder","onChange","e","target","type","Container","AppLabel","App","useState","city","updateweather","a","preventDefault","axios","get","response","console","log","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,MAA0B,iCCA1B,MAA0B,qCCA1B,MAA0B,iCCA1B,MAA0B,qC,OCQ5BA,EAAmB,CAC5BC,OAAU,CAACA,UACXC,QAAU,CAACA,WACXC,SAAU,CAACC,WACXC,KAAU,CAACA,QACXC,SAAU,CAACA,aAGTC,EAAmBC,IAAOC,IAAV,qKAUhBC,EAAYF,IAAOG,KAAV,sHAUTC,EAAcJ,IAAOK,IAAV,8EAOXC,EAAWN,IAAOG,KAAV,mGAORI,EAAmBP,IAAOG,KAAV,+JAUhBK,EAAuBR,IAAOC,IAAV,mLASpBQ,EAAgBT,IAAOC,IAAV,qJAObS,EAAWV,IAAOK,IAAV,+DAKRM,EAAYX,IAAOG,KAAV,sLAWTS,EAAuB,SAACC,GAC1B,IAAOC,EAAcD,EAAdC,KAAKC,EAASF,EAATE,MACZ,OACI,eAACN,EAAD,WACI,cAACC,EAAD,CAAUM,IAAKxB,EAAiBsB,KAChC,eAACH,EAAD,WACKI,EACD,+BAAOD,WAoCRG,EA9BU,SAACJ,GAAW,IAAD,YAIfK,EAFTC,EAAYN,EAAZM,QACFC,EAAK,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAASA,QAAQ,GAAGE,YAAvB,aAAG,EAA0BC,SAAS,KAKjD,OACI,qCACA,cAAChB,EAAD,2BAAca,QAAd,IAAcA,OAAd,EAAcA,EAASL,KAAvB,oBAAgCK,QAAhC,IAAgCA,GAAhC,UAAgCA,EAASI,WAAzC,aAAgC,EAAcC,WAC9C,eAACzB,EAAD,WACI,eAACG,EAAD,WACI,yCAAUuB,KAAKC,OAAa,OAAPP,QAAO,IAAPA,GAAA,UAAAA,EAASQ,YAAT,eAAeC,MAAO,KAA3C,WADJ,sBAEaT,QAFb,IAEaA,OAFb,EAEaA,EAASA,QAAQ,GAAGU,gBAEjC,cAACzB,EAAD,CAAaY,IAAI,8BAErB,cAACT,EAAD,2BACA,eAACC,EAAD,WACI,cAAC,EAAD,CAAsBM,KAAMM,EAAQ,SAAS,UACvBL,MAAK,WAjBlBG,EAiB8B,OAACC,QAAD,IAACA,OAAD,EAACA,EAASI,IAAIH,EAAQ,SAAW,WAhBtE,GAAN,OAAU,IAAIU,KAAiB,IAAZZ,GAAkBa,WAArC,cAAqD,IAAID,KAAiB,IAAZZ,GAAkBc,kBAiB5E,cAAC,EAAD,CAAsBlB,KAAK,WAAWC,MAAK,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAASQ,YAAX,aAAE,EAAeM,WAC5D,cAAC,EAAD,CAAsBnB,KAAK,OAAOC,MAAK,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAASe,YAAX,aAAE,EAAeC,QACxD,cAAC,EAAD,CAAsBrB,KAAK,WAAWC,MAAK,OAAEI,QAAF,IAAEA,GAAF,UAAEA,EAASQ,YAAX,aAAE,EAAeS,kBCjIzD,MAA0B,wCCGnChC,EAAcJ,IAAOK,IAAV,+EAMXgC,EAAkBrC,IAAOG,KAAV,oGAOfmC,EAAYtC,IAAOuC,KAAV,ogBAgDAC,EAhBO,SAAC3B,GACnB,IAAO4B,EAA4B5B,EAA5B4B,WAAYC,EAAgB7B,EAAhB6B,aAEnB,OACI,qCACA,cAAC,EAAD,CAAa1B,IAAKX,IAClB,cAACgC,EAAD,uCACA,eAACC,EAAD,CAAWK,SAAUD,EAArB,UACI,uBAAOE,YAAY,OAAOC,SAAU,SAACC,GAAD,OAAML,EAAWK,EAAEC,OAAOhC,UAE9D,wBAAQiC,KAAK,SAAb,2B,iBCpDNC,EAAYjD,IAAOC,IAAV,gPAcTiD,EAAWlD,IAAOC,IAAV,qGAgCCkD,MAvBf,WACE,MAA2BC,qBAA3B,mBAAOC,EAAP,KAAaZ,EAAb,KACA,EAAiCW,qBAAjC,mBAAOjC,EAAP,KAAgBmC,EAAhB,KAEMZ,EAAY,uCAAG,WAAMI,GAAN,eAAAS,EAAA,6DACnBT,EAAEU,iBADiB,SAEIC,IAAMC,IAAN,4DAA+DL,EAA/D,4CAFJ,OAEbM,EAFa,OAGnBC,QAAQC,IAAIF,GACZL,EAAcK,EAASG,MAJJ,2CAAH,sDAQlB,OAAO,eAACb,EAAD,WACL,cAACC,EAAD,0BAEE/B,EAAU,cAAC,EAAD,CAAkBA,QAASA,IACnC,cAAC,EAAD,CAAesB,WAAYA,EAAYC,aAAcA,QCxC7DqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d592bb33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/temp.aa236718.svg\";","export default __webpack_public_path__ + \"static/media/humidity.38d0c2ff.svg\";","export default __webpack_public_path__ + \"static/media/wind.903e99b7.svg\";","export default __webpack_public_path__ + \"static/media/pressure.37f0a961.svg\";","import styled from 'styled-components';\nimport Sunrise from \"../icons/temp.svg\";\nimport Sunset from \"../icons/temp.svg\";\nimport Humidty from \"../icons/humidity.svg\";\nimport Wind from \"../icons/wind.svg\";\nimport Pressure from \"../icons/pressure.svg\";\n\n\nexport const WeatherInfoIcons = {\n    Sunset:   {Sunset},\n    Sunrise:  {Sunrise},\n    Humidity: {Humidty},\n    Wind:     {Wind},\n    Pressure: {Pressure},\n};\n\nconst WeatherCondition = styled.div`\ndisplay:flex;\nflex-direction: row;\ncolor:white;\nalign-item: center;\nwidth: 100%;\njustify-content: space-between;\nmargin 13px auto\n`;\n\nconst Condition = styled.span`\ncolor: white;\nmargin: 20px auto;\nfont-size: 14px;\n& span {\n    font-size: 28px;\n\n}\n`;\n\nconst WeatherLogo = styled.img`\nwidth: 100px;\nheight: 100px;\nmargin: 5px auto;\n`;\n\n\nconst Location = styled.span`\ncolor:white;\nfont-size: 28px;\nfont-weight: bold;\nmargin-top: 20px;\n`;\n\nconst WeatherinfoLable = styled.span`\ncolor:white;\nfont-size: 16px;\nfont-weight: bold;\nmargin: 20px 25px 10px; \ntext-align: start;\nwidth: 90%;\nmargin-top: -15px;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  color:white;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\nconst WeatherInfoComponent = (props) => {\n    const {name,value} = props;\n    return (\n        <InfoContainer>\n            <InfoIcon src={WeatherInfoIcons[name]} />\n            <InfoLabel>\n                {value}\n                <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\n\nconst WeatherComponent = (props) => {\n\n    const { weather } = props;\n    const isDay = weather?.weather[0].icon?.includes('d');\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n\n    return(\n        <>\n        <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\n        <WeatherCondition>\n            <Condition>\n                <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\n                {`  |  ${weather?.weather[0].description}`}\n            </Condition>\n            <WeatherLogo src=\"/icons/perfect-day.svg\"/>\n        </WeatherCondition>\n        <WeatherinfoLable>Weather Info</WeatherinfoLable>\n        <WeatherInfoContainer>\n            <WeatherInfoComponent name={isDay ? \"Sunset\":\"Sunrise\"} \n                                  value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\n            <WeatherInfoComponent name=\"Humidity\" value={weather?.main?.humidity}/>\n            <WeatherInfoComponent name=\"Wind\" value={weather?.wind?.speed}/>\n            <WeatherInfoComponent name=\"Pressure\" value={weather?.main?.pressure}/>\n        </WeatherInfoContainer>\n        </>\n    );\n};\n\nexport default WeatherComponent;","export default __webpack_public_path__ + \"static/media/perfect-day.5156c281.svg\";","import styled from 'styled-components';\nimport img from '../icons/perfect-day.svg';\n\nconst WeatherLogo = styled.img`\nwidth: 140px;\nheight: 140px;\nmargin: 40px auto;\n`\n\nconst ChooseCityLabel = styled.span`\ncolor: white;\nfont-size: 18px;\nfont-weight: bold;\nmargin: 10px auto\n`\n\nconst SearchBox = styled.form`\ndisplay: flex;\nflex-direction: row;\nborder: black solid 1px;\nborder-radius: 2px;\nborder-color: white;\ncolor: black;\nfont-size: 18px;\nfont-weight: bold;\nmargin: 20px auto\n& input{\n    padding: 10px;\n    font-size: 14px;\n    outline: none;\n    border: none;\n    font-weight: bold;\n}\n\n& button{\n    padding: 10px;\n    font-size: 14px;\n    outline: none;\n    border: none;\n    font-weight: bold;\n    color:white;\n    background-color: black;\n    cursor: pointer;\n}\n`\n\n\n\nconst CityComponent = (props) => {\n    const {updatecity, fetchWeather} = props;\n\n    return(\n        <>\n        <WeatherLogo src={img}/>\n        <ChooseCityLabel>Find Weather of the City</ChooseCityLabel>\n        <SearchBox onSubmit={fetchWeather}>\n            <input placeholder=\"City\" onChange={(e)=> updatecity(e.target.value)}\n            />\n            <button type=\"submit\">Search</button>\n        </SearchBox>\n        </>\n    );\n};\n\nexport default CityComponent;","import styled from 'styled-components';\nimport { useState } from 'react';\nimport WeatherComponent from './Components/WeatherComponent';\nimport CityComponent from './Components/CityComponents';\nimport axios from 'axios';\n\nconst Container = styled.div`\ndisplay: flex;\nflex-direction : column;\nmargin: auto;\nalign-items: center;\nbox-shadow: 0 3px 6px 0 #555;\npadding: 20px 10px;\nborder-radius: 4px;\nwidth: 380px;\nbackground: black;\nfont-family: Montserrat\n`;\n\n\nconst AppLabel = styled.div`\ncolor: white;\nmargin: 20px auto;\nfont-size: 20px;\nfont-weight: bold;\n`;\n\n\n\nfunction App() {\n  const [city, updatecity] = useState();\n  const [weather, updateweather] = useState();\n\n  const fetchWeather = async(e) => {\n    e.preventDefault();\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=d8be39510f66b94d1859317a8e9cab91`)\n    console.log(response)\n    updateweather(response.data);\n  };\n\n\n  return <Container>\n    <AppLabel>Weather App</AppLabel>\n    {\n      weather ? <WeatherComponent weather={weather}/> \n      : <CityComponent updatecity={updatecity} fetchWeather={fetchWeather}/>\n    }\n    \n  </Container>\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}